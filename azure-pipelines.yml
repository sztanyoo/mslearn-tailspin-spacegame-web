trigger:
- '*'

pool: dell

parameters:
- name: ServiceName
  displayName: Service Name
  type: string
  default: 'DefaultService'
- name: Location
  displayName: Location
  type: string
  default: 'Budapest'
- name: Release
  displayName: Release
  type: string
  default: 'Main'

variables:
  buildConfiguration: 'Release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotnetSdkVersion: '5.x'

steps:
# - task: UseDotNet@2
#   displayName: 'Use .NET SDK $(dotnetSdkVersion)'
#   inputs:
#     packageType: sdk
#     version: '$(dotnetSdkVersion)'

# - task: Npm@1
#   displayName: 'Run npm install'
#   inputs:
#     verbose: false

# - script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
#   displayName: 'Compile Sass assets'

# - task: gulp@1
#   displayName: 'Run gulp tasks'

# - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
#   displayName: 'Write build info'
#   workingDirectory: $(wwwrootDir)

# - task: DotNetCoreCLI@2
#   displayName: 'Restore project dependencies'
#   inputs:
#     command: 'restore'
#     projects: '**/*.csproj'

# - template: templates/build.yml
#   parameters:
#     buildConfiguration: 'Debug'

# - template: templates/build.yml
#   parameters:
#     buildConfiguration: 'Release'

# - task: PublishBuildArtifacts@1
#   displayName: 'Publish Artifact: drop'
#   condition: succeeded()

# - script: 'curl -X PUT -H"Authorization: Bearer $(System.AccessToken)" -H "Content-Length: 0" "$(System.CollectionUri)$(System.TeamProjectId)/_apis/build/builds/$(Build.BuildId)/tags/service=${{ parameters.ServiceName }}?api-version=7.1-preview.3"'
#   displayName: Tag Build

- script: 'curl -X GET -H"Authorization: Bearer $(System.AccessToken)" -H"Content-Type: application/json"
          "https://vsaex.dev.azure.com/bencestan/_apis/userentitlements/$(Build.QueuedById)?api-version=6.0-preview.3"'
  displayName: Get membership

- script: 'while [ 0 != $(curl -X GET -H"Authorization: Bearer $(System.AccessToken)"
          "$(System.CollectionUri)$(System.TeamProjectId)/_apis/build/builds?tagFilters=Location=${{ parameters.Location }}&statusFilter=inProgress&api-version=7.1-preview.3" | jq ".count") ]; do echo "Wait for parallel operation"; sleep 5; done'
  displayName: Check for conflicting builds


- script: 'curl -v -X POST -H"Authorization: Bearer $(System.AccessToken)" -H"Content-Type: application/json"  -d"[\"ServiceName=${{ parameters.ServiceName }}\",\"Location=${{ parameters.Location }}\",\"Release=${{ parameters.Release }}\"]"  "$(System.CollectionUri)$(System.TeamProjectId)/_apis/build/builds/$(Build.BuildId)/tags?api-version=7.1-preview.3"'
  displayName: Tag Build

- script: 'sleep 120'
  displayName: Perform critical deployment actions

- script: 'curl -X GET -H"Authorization: Bearer $(System.AccessToken)"
          "$(System.CollectionUri)$(System.TeamProjectId)/_apis/build/builds?tagFilters=Location=${{ parameters.Location }}&statusFilter=inProgress&api-version=7.1-preview.3" | jq'
  displayName: Check for inProgress tagged builds


